{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["aMXQCo-Z9ARe","zEtBlUtD9Mak"],"mount_file_id":"17i7fQhZuFbuLrZFsEB28ZOt2dc6lTkF5","authorship_tag":"ABX9TyPjV/gE++2H+VTU/5ZS6Fk7"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import random\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt"],"metadata":{"id":"dFLtXQ-q-b28"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Question 1"],"metadata":{"id":"aMXQCo-Z9ARe"}},{"cell_type":"markdown","source":["1. Create two CSV files with three columns: Tom, Brick, Harry with index 'True' and 'False'. Each column must contain at least ten values each as a combination of data types.  "],"metadata":{"id":"DHq8Ec_Z8cg3"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"To08Z3jd8AZt"},"outputs":[],"source":["# Create DataFrame 1 with three columns: Tom, Brick, Harry\n","df1 = pd.DataFrame({\n","    'Tom': [1, 'apple', 5.6, True, 9, 'banana', 3.2, False, 'grape', 12],\n","    'Brick': ['red', 5, False, 7.8, 'blue', 10, True, 4, 'yellow', 6],\n","    'Harry': [True, 3.5, 'orange', 8, 1, 'pear', False, 6.9, 11, 'cherry']\n","}, index=[True, False, True, False, True, False, True, False, True, False])\n","\n","# Create DataFrame 2 with different data\n","df2 = pd.DataFrame({\n","    'Tom': [10, 'carrot', 3.1, False, 7, 'mango', 4.8, True, 'plum', 14],\n","    'Brick': ['green', 9, True, 6.2, 'purple', 11, False, 2, 'orange', 8],\n","    'Harry': [False, 4.3, 'banana', 12, 5, 'melon', True, 8.7, 13, 'strawberry']\n","}, index=[False, True, False, True, False, True, False, True, False, True])\n","\n","# Save to CSV files\n","df1.to_csv('file1.csv', index=True)\n","df2.to_csv('file2.csv', index=True)\n"]},{"cell_type":"markdown","source":["\n","2. Create a dataframe with at least 5 columns and 10 rows. There must be some missing values in it. If the integer column contains missing values, replace them using a statistical approach. Also, if there are any missing values in the String column, drop the rows using some looping function.  "],"metadata":{"id":"8Hhn8vEr-Pek"}},{"cell_type":"code","source":["random.seed(10)\n","dtype = ['int', 'str']\n","\n","def get_col_data(type, rows):\n","    \"\"\"Generate column data based on type\"\"\"\n","    if type == dtype[0]:\n","        return list(np.random.randint(1, 100, rows))\n","    else:\n","        return [f'data-{i}' for i in np.random.randint(1, 100, rows)]\n","\n","def insert_random_nulls(data_dict, null_probability=0.2):\n","    \"\"\"\n","    Insert null values at random positions in the dictionary's list values\n","    \"\"\"\n","    result = {}\n","\n","    for key, value_list in data_dict.items():\n","        # Create a copy of the list to avoid modifying the original\n","        modified_list = value_list.copy()\n","\n","        # Determine number of nulls to insert\n","        list_length = len(value_list)\n","        num_nulls = int(list_length * null_probability)\n","\n","        # Randomly select positions to insert nulls\n","        null_positions = random.sample(range(list_length), num_nulls)\n","\n","        # Insert nulls at selected positions\n","        for pos in null_positions:\n","            modified_list[pos] = None\n","\n","        result[key] = modified_list\n","    return result\n","\n","\n","def ganerate_data(rows=10, cols=5):\n","    \"\"\"Generate initial data\"\"\"\n","    data = {}\n","\n","    for i in range(1, cols+1):\n","        col_d_type = random.choice(dtype)\n","        col_name = f'col{i}'\n","        col_values = get_col_data(col_d_type, rows)\n","        data[col_name] = col_values\n","\n","    return data"],"metadata":{"id":"gHTvs6-E9PTs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_with_nulls = insert_random_nulls(ganerate_data())\n","df = pd.DataFrame(data_with_nulls)\n","\n","# Step 1: Replace missing values in integer columns using mean\n","numeric_columns = df.select_dtypes(include='number').columns\n","for column in numeric_columns:\n","    df[column] = df[column].fillna(df[column].mean())\n","\n","print(\"\\nAfter filling numeric nulls with mean:\")\n","print(df)\n","\n","# Step 2: Drop rows with missing values in string columns using loop\n","string_columns = df.select_dtypes(include='object').columns\n","rows_to_drop = set()  # Using set to avoid duplicate indices\n","\n","for column in string_columns:\n","    for i, value in enumerate(df[column]):\n","        if pd.isna(value):\n","            rows_to_drop.add(i)\n","\n","# Drop the collected rows\n","if rows_to_drop:\n","    df.drop(index=rows_to_drop, inplace=True)\n","\n","df.reset_index(drop=True, inplace=True)\n","print(df)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HZL9fPRKC8R9","executionInfo":{"status":"ok","timestamp":1729581763169,"user_tz":-330,"elapsed":460,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"c07842e9-345c-4bdb-e1b9-4649bb11de34"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","After filling numeric nulls with mean:\n","      col1    col2     col3  col4     col5\n","0  data-41  19.000  data-59  18.0  data-13\n","1   data-9  63.000  data-98  95.0  data-91\n","2  data-57   9.000     None  58.0     None\n","3  data-85  98.000  data-39  76.0  data-53\n","4  data-38  50.125  data-94  64.0  data-33\n","5   data-7  60.000  data-47  64.0  data-52\n","6     None  82.000  data-65  90.0  data-10\n","7  data-34  30.000     None  12.0     None\n","8  data-17  40.000  data-36  94.0  data-28\n","9     None  50.125  data-63  69.0  data-44\n","<enumerate object at 0x7d26560d1fc0>\n","<enumerate object at 0x7d26560d1fc0>\n","<enumerate object at 0x7d26560d1fc0>\n","      col1    col2     col3  col4     col5\n","0  data-41  19.000  data-59  18.0  data-13\n","1   data-9  63.000  data-98  95.0  data-91\n","2  data-85  98.000  data-39  76.0  data-53\n","3  data-38  50.125  data-94  64.0  data-33\n","4   data-7  60.000  data-47  64.0  data-52\n","5  data-17  40.000  data-36  94.0  data-28\n"]}]},{"cell_type":"markdown","source":["\n","3. Create a dataframe with at least 5 columns and 10 rows. Each column must contain only integer elements. Column names must be Abilash, Ankit, Ashok, Asif, Anjaan. Now apply a function where we want to group together the data based on any row or column. Group the series using a mapper or by a series of columns.  "],"metadata":{"id":"LMWD2ypu-RYP"}},{"cell_type":"code","source":["np.random.seed(42)\n","\n","\n","names = ['Abilash', 'Ankit', 'Ashok', 'Asif', 'Anjaan']\n","df = pd.DataFrame({name:np.random.randint(1,10,10) for name in names})\n","print(\"Original DataFrame:\\n\" ,df)\n","\n","# Example: Grouping the data by a series of columns (Abilash and Ankit)\n","grouped = df.groupby(['Abilash', 'Ankit']).sum()\n","print(\"\\n\\nGrouped by columns 'Abilash' and 'Ankit':\\n\", grouped)\n","\n","# Alternatively, you can group by rows using a mapper (e.g., create a mapper for columns)\n","mapper = {\n","    'Abilash': 'Group1',\n","    'Ankit': 'Group1',\n","    'Ashok': 'Group2',\n","    'Asif': 'Group2',\n","    'Anjaan': 'Group3'\n","}\n","\n","# Group the columns using the mapper\n","grouped_by_mapper = df.T.groupby(mapper).sum()\n","\n","print(\"\\n\\nGrouped by mapper:\\n\", grouped_by_mapper)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vncsl4zu9PNU","executionInfo":{"status":"ok","timestamp":1729582875842,"user_tz":-330,"elapsed":453,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"b12ca968-c44f-4864-a6c5-a033f2dacfb3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Original DataFrame:\n","    Abilash  Ankit  Ashok  Asif  Anjaan\n","0        7      8      1     3       5\n","1        4      8      6     7       2\n","2        8      3      9     5       4\n","3        5      6      1     9       7\n","4        7      5      3     7       8\n","5        3      2      7     2       3\n","6        7      8      4     4       1\n","7        8      6      9     9       4\n","8        5      2      3     2       2\n","9        4      5      5     9       8\n","\n","\n","Grouped by columns 'Abilash' and 'Ankit':\n","                Ashok  Asif  Anjaan\n","Abilash Ankit                     \n","3       2          7     2       3\n","4       5          5     9       8\n","        8          6     7       2\n","5       2          3     2       2\n","        6          1     9       7\n","7       5          3     7       8\n","        8          5     7       6\n","8       3          9     5       4\n","        6          9     9       4\n","\n","\n","Grouped by mapper:\n","          0   1   2   3   4  5   6   7  8   9\n","Group1  15  12  11  11  12  5  15  14  7   9\n","Group2   4  13  14  10  10  9   8  18  5  14\n","Group3   5   2   4   7   8  3   1   4  2   8\n"]}]},{"cell_type":"markdown","source":["\n","4. Read the CountryDataIND.csv file and perform statistical operations on the dataset. Look for any missing data if any.  "],"metadata":{"id":"4eGYt7ci-TCM"}},{"cell_type":"code","source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Sets/CountryDataIND.csv')"],"metadata":{"id":"w0qqrLDf9PA0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"4GE0SVMcMean","executionInfo":{"status":"ok","timestamp":1729583528262,"user_tz":-330,"elapsed":10,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"9b0d0399-a7bb-4143-a899-75879f63d2a8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Series Code Frequency          Series Units of measurement  \\\n","0  IT_USE_ii99    Annual  Internet users   Per 100 population   \n","1  IT_USE_ii99    Annual  Internet users   Per 100 population   \n","2  IT_USE_ii99    Annual  Internet users   Per 100 population   \n","3  SE_ADT_1524    Annual   Literacy rate              Percent   \n","4  SE_ADT_1524    Annual   Literacy rate              Percent   \n","\n","                 Location        Age group         Sex Reference Area  \\\n","0  Total (national level)   All age ranges  Both sexes          India   \n","1  Total (national level)   All age ranges  Both sexes          India   \n","2  Total (national level)   All age ranges  Both sexes          India   \n","3  Total (national level)  15-24 year olds  Both sexes          India   \n","4  Total (national level)  15-24 year olds  Both sexes          India   \n","\n","     Source type  Time period  Observation Value Unit multiplier  \\\n","0  Not available         1999                0.2           Units   \n","1  Not available         2002                3.2           Units   \n","2  Not available         2006                7.0           Units   \n","3  Not available         1991               48.5           Units   \n","4  Not available         2001               76.4           Units   \n","\n","  Nature of data points  Time period details  \\\n","0          Country Data                 1999   \n","1          Country Data                 2002   \n","2          Country Data                 2006   \n","3          Country Data                 1991   \n","4          Country Data                 2001   \n","\n","                       Source details  Footnotes  \n","0  Ministry of Information Technology        NaN  \n","1  Ministry of Information Technology        NaN  \n","2  Ministry of Information Technology        NaN  \n","3                 Planning Commission        NaN  \n","4                 Planning Commission        NaN  "],"text/html":["\n","  <div id=\"df-5c1392e1-6592-4076-ba1b-15b8418def0d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Series Code</th>\n","      <th>Frequency</th>\n","      <th>Series</th>\n","      <th>Units of measurement</th>\n","      <th>Location</th>\n","      <th>Age group</th>\n","      <th>Sex</th>\n","      <th>Reference Area</th>\n","      <th>Source type</th>\n","      <th>Time period</th>\n","      <th>Observation Value</th>\n","      <th>Unit multiplier</th>\n","      <th>Nature of data points</th>\n","      <th>Time period details</th>\n","      <th>Source details</th>\n","      <th>Footnotes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>IT_USE_ii99</td>\n","      <td>Annual</td>\n","      <td>Internet users</td>\n","      <td>Per 100 population</td>\n","      <td>Total (national level)</td>\n","      <td>All age ranges</td>\n","      <td>Both sexes</td>\n","      <td>India</td>\n","      <td>Not available</td>\n","      <td>1999</td>\n","      <td>0.2</td>\n","      <td>Units</td>\n","      <td>Country Data</td>\n","      <td>1999</td>\n","      <td>Ministry of Information Technology</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>IT_USE_ii99</td>\n","      <td>Annual</td>\n","      <td>Internet users</td>\n","      <td>Per 100 population</td>\n","      <td>Total (national level)</td>\n","      <td>All age ranges</td>\n","      <td>Both sexes</td>\n","      <td>India</td>\n","      <td>Not available</td>\n","      <td>2002</td>\n","      <td>3.2</td>\n","      <td>Units</td>\n","      <td>Country Data</td>\n","      <td>2002</td>\n","      <td>Ministry of Information Technology</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>IT_USE_ii99</td>\n","      <td>Annual</td>\n","      <td>Internet users</td>\n","      <td>Per 100 population</td>\n","      <td>Total (national level)</td>\n","      <td>All age ranges</td>\n","      <td>Both sexes</td>\n","      <td>India</td>\n","      <td>Not available</td>\n","      <td>2006</td>\n","      <td>7.0</td>\n","      <td>Units</td>\n","      <td>Country Data</td>\n","      <td>2006</td>\n","      <td>Ministry of Information Technology</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>SE_ADT_1524</td>\n","      <td>Annual</td>\n","      <td>Literacy rate</td>\n","      <td>Percent</td>\n","      <td>Total (national level)</td>\n","      <td>15-24 year olds</td>\n","      <td>Both sexes</td>\n","      <td>India</td>\n","      <td>Not available</td>\n","      <td>1991</td>\n","      <td>48.5</td>\n","      <td>Units</td>\n","      <td>Country Data</td>\n","      <td>1991</td>\n","      <td>Planning Commission</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>SE_ADT_1524</td>\n","      <td>Annual</td>\n","      <td>Literacy rate</td>\n","      <td>Percent</td>\n","      <td>Total (national level)</td>\n","      <td>15-24 year olds</td>\n","      <td>Both sexes</td>\n","      <td>India</td>\n","      <td>Not available</td>\n","      <td>2001</td>\n","      <td>76.4</td>\n","      <td>Units</td>\n","      <td>Country Data</td>\n","      <td>2001</td>\n","      <td>Planning Commission</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5c1392e1-6592-4076-ba1b-15b8418def0d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5c1392e1-6592-4076-ba1b-15b8418def0d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5c1392e1-6592-4076-ba1b-15b8418def0d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c33d75d9-dd41-4a63-8bd2-df23f78227aa\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c33d75d9-dd41-4a63-8bd2-df23f78227aa')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c33d75d9-dd41-4a63-8bd2-df23f78227aa button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 29,\n  \"fields\": [\n    {\n      \"column\": \"Series Code\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"SL_EMP_NAGR\",\n          \"SE_ADT_1524\",\n          \"SH_TBS_PREV\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Annual\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Series\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Share women in wage employment in the non-agricultural sector\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Units of measurement\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Percent\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Total (national level)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age group\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"15-24 year olds\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Both sexes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reference Area\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"India\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Source type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Not available\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Time period\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 1990,\n        \"max\": 2006,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          2000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Observation Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 156.9225694662236,\n        \"min\": 0.2,\n        \"max\": 503.0,\n        \"num_unique_values\": 29,\n        \"samples\": [\n          47.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unit multiplier\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Units\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nature of data points\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Country Data\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Time period details\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 1990,\n        \"max\": 2006,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          2000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Source details\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Planning Commission\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Footnotes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["print('\\n\\ndf.describe\\n',df.describe())\n","print('\\n\\ndf.info\\n',df.info())\n","print('\\n\\ndf.shape\\n',df.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pljw9KZsLo9R","executionInfo":{"status":"ok","timestamp":1729583529920,"user_tz":-330,"elapsed":8,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"57422b37-c1a6-40ea-8746-630fa27b220b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","\n","df.describe\n","        Time period  Observation Value  Time period details  Footnotes\n","count    29.000000          29.000000            29.000000        0.0\n","mean   1999.551724         140.806897          1999.551724        NaN\n","std       4.807629         156.922569             4.807629        NaN\n","min    1990.000000           0.200000          1990.000000        NaN\n","25%    1998.000000          27.500000          1998.000000        NaN\n","50%    2000.000000          48.500000          2000.000000        NaN\n","75%    2004.000000         301.000000          2004.000000        NaN\n","max    2006.000000         503.000000          2006.000000        NaN\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 29 entries, 0 to 28\n","Data columns (total 16 columns):\n"," #   Column                 Non-Null Count  Dtype  \n","---  ------                 --------------  -----  \n"," 0   Series Code            29 non-null     object \n"," 1   Frequency              29 non-null     object \n"," 2   Series                 29 non-null     object \n"," 3   Units of measurement   29 non-null     object \n"," 4   Location               29 non-null     object \n"," 5   Age group              29 non-null     object \n"," 6   Sex                    29 non-null     object \n"," 7   Reference Area         29 non-null     object \n"," 8   Source type            29 non-null     object \n"," 9   Time period            29 non-null     int64  \n"," 10  Observation Value      29 non-null     float64\n"," 11  Unit multiplier        29 non-null     object \n"," 12  Nature of data points  29 non-null     object \n"," 13  Time period details    29 non-null     int64  \n"," 14  Source details         23 non-null     object \n"," 15  Footnotes              0 non-null      float64\n","dtypes: float64(2), int64(2), object(12)\n","memory usage: 3.8+ KB\n","\n","\n","df.info\n"," None\n","\n","\n","df.shape\n"," (29, 16)\n"]}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":586},"id":"4xiy0JY6NU6t","executionInfo":{"status":"ok","timestamp":1729583532139,"user_tz":-330,"elapsed":468,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"2974fe01-17fd-4763-f72c-b42aed1cc1b7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Series Code               0\n","Frequency                 0\n","Series                    0\n","Units of measurement      0\n","Location                  0\n","Age group                 0\n","Sex                       0\n","Reference Area            0\n","Source type               0\n","Time period               0\n","Observation Value         0\n","Unit multiplier           0\n","Nature of data points     0\n","Time period details       0\n","Source details            6\n","Footnotes                29\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Series Code</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Frequency</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Series</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Units of measurement</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Location</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Age group</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Sex</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Reference Area</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Source type</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Time period</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Observation Value</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Unit multiplier</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Nature of data points</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Time period details</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Source details</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>Footnotes</th>\n","      <td>29</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["df = df.drop('Footnotes', axis=1)"],"metadata":{"id":"NNDp8HaLNdP9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = df.dropna(how='any', axis=0)"],"metadata":{"id":"SFQn9a2zLmn4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["total_missing = df.isnull().sum().sum()\n","print(\"\\nTotal Missing Values in the Dataset:\", total_missing)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r6-kW2jTLml5","executionInfo":{"status":"ok","timestamp":1729583921710,"user_tz":-330,"elapsed":437,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"8a11b2ba-6f50-47d1-e105-18517814eb67"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Total Missing Values in the Dataset: 0\n"]}]},{"cell_type":"markdown","source":["\n","5. Plot a histogram with bin size 10 for the column 'Observation Value'. Also, plot a scatter plot between 'Observation Value' and 'Time Period'."],"metadata":{"id":"kk76bqDo-UQU"}},{"cell_type":"code","source":["plt.figure()\n","df['Observation Value'].plot.hist(bins=10)\n","plt.title('Observation Value Graph')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"krLUulIPLmgS","executionInfo":{"status":"ok","timestamp":1729586771436,"user_tz":-330,"elapsed":963,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"8c655129-68ca-4e47-e58a-7e23d011e43b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.figure()\n","plt.scatter(df['Time period details'],df['Observation Value'])\n","plt.title('Observation Value Graph')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"s5p0biwh9O9c","executionInfo":{"status":"ok","timestamp":1729586909029,"user_tz":-330,"elapsed":536,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"612d718a-e65f-40ef-a158-fefced4f71dd"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Question 2"],"metadata":{"id":"LIuSuoo99FDk"}},{"cell_type":"markdown","source":["Suppose you have landed a job, and the first task you’re assigned is to prepare a report that includes the following:\n"],"metadata":{"id":"Plssju9U8zkF"}},{"cell_type":"code","source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Sets/purchase_data.csv')\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Q5hHF07Ob7Bx","executionInfo":{"status":"ok","timestamp":1729587320906,"user_tz":-330,"elapsed":462,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"a0c39cba-b13a-4e9b-ddf0-e70fd355723d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Purchase ID             SN  Age Gender  Item ID  \\\n","0            0        Lisim78   20   Male      108   \n","1            1    Lisovynya38   40   Male      143   \n","2            2     Ithergue48   24   Male       92   \n","3            3  Chamassasya86   24   Male      100   \n","4            4      Iskosia90   23   Male      131   \n","\n","                                   Item Name  Price  \n","0  Extraction, Quickblade Of Trembling Hands   3.53  \n","1                          Frenzied Scimitar   1.56  \n","2                               Final Critic   4.88  \n","3                                Blindscythe   3.27  \n","4                                       Fury   1.44  "],"text/html":["\n","  <div id=\"df-21b36bda-d0d8-461e-93aa-1c33b169d398\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Purchase ID</th>\n","      <th>SN</th>\n","      <th>Age</th>\n","      <th>Gender</th>\n","      <th>Item ID</th>\n","      <th>Item Name</th>\n","      <th>Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Lisim78</td>\n","      <td>20</td>\n","      <td>Male</td>\n","      <td>108</td>\n","      <td>Extraction, Quickblade Of Trembling Hands</td>\n","      <td>3.53</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Lisovynya38</td>\n","      <td>40</td>\n","      <td>Male</td>\n","      <td>143</td>\n","      <td>Frenzied Scimitar</td>\n","      <td>1.56</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Ithergue48</td>\n","      <td>24</td>\n","      <td>Male</td>\n","      <td>92</td>\n","      <td>Final Critic</td>\n","      <td>4.88</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Chamassasya86</td>\n","      <td>24</td>\n","      <td>Male</td>\n","      <td>100</td>\n","      <td>Blindscythe</td>\n","      <td>3.27</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>Iskosia90</td>\n","      <td>23</td>\n","      <td>Male</td>\n","      <td>131</td>\n","      <td>Fury</td>\n","      <td>1.44</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-21b36bda-d0d8-461e-93aa-1c33b169d398')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-21b36bda-d0d8-461e-93aa-1c33b169d398 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-21b36bda-d0d8-461e-93aa-1c33b169d398');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bb122f64-636a-4e93-b70b-ebf9731450a2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bb122f64-636a-4e93-b70b-ebf9731450a2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bb122f64-636a-4e93-b70b-ebf9731450a2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 780,\n  \"fields\": [\n    {\n      \"column\": \"Purchase ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 225,\n        \"min\": 0,\n        \"max\": 779,\n        \"num_unique_values\": 780,\n        \"samples\": [\n          595,\n          587,\n          543\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SN\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 576,\n        \"samples\": [\n          \"Tyidaim51\",\n          \"Yathecal82\",\n          \"Lisico81\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6,\n        \"min\": 7,\n        \"max\": 45,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          41,\n          42,\n          22\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Male\",\n          \"Other / Non-Disclosed\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Item ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 52,\n        \"min\": 0,\n        \"max\": 183,\n        \"num_unique_values\": 183,\n        \"samples\": [\n          57,\n          102,\n          118\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Item Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 179,\n        \"samples\": [\n          \"Expiration, Warscythe Of Lost Worlds\",\n          \"Devine\",\n          \"Dawn\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1695485561756822,\n        \"min\": 1.0,\n        \"max\": 4.99,\n        \"num_unique_values\": 145,\n        \"samples\": [\n          2.5,\n          3.92,\n          4.32\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":80}]},{"cell_type":"markdown","source":["1. Player Count  \n","   - Total Number of Players  \n","\n"],"metadata":{"id":"6p2Vu-ohdHsN"}},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rkOP1iNLcDqI","executionInfo":{"status":"ok","timestamp":1729587334895,"user_tz":-330,"elapsed":9,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"5de74cf3-6b01-4611-8eb3-168a030167bb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(780, 7)"]},"metadata":{},"execution_count":81}]},{"cell_type":"code","source":["print(\"Total number of playes: \",df['SN'].value_counts().count())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5j1xfw72cDn5","executionInfo":{"status":"ok","timestamp":1729587583786,"user_tz":-330,"elapsed":426,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"f9dc2b84-17fd-4429-f24d-1332d84aad7e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Total number of playes:  576\n"]}]},{"cell_type":"markdown","source":["2. Purchasing Analysis (Total)  \n","   - Number of Unique Items  \n","   - Average Purchase Price  \n","   - Total Number of Purchases  \n","   - Total Revenue  \n","\n"],"metadata":{"id":"LPyT5HmzdHqA"}},{"cell_type":"code","source":["# Number of Unique Items\n","print(\"Number of Unique items: \",df['Item ID'].value_counts().count())\n","\n","# Average Purchase Price\n","print(\"Average Purachasing Price: \",df['Price'].mean())\n","\n","# Total Number of Purchases\n","print(\"Total Number of Purchases: \",len(df['Purchase ID']))\n","\n","# Total Revenue\n","print(\"Total Revenue: \",df['Price'].sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8xrDRVpCdbF2","executionInfo":{"status":"ok","timestamp":1729587957952,"user_tz":-330,"elapsed":619,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"7c9efd85-2790-418d-806f-bef56a773523"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of Unique items:  183\n","Average Purachasing Price:  3.0509871794871795\n","Total Number of Purchases:  780\n","Total Revenue:  2379.77\n"]}]},{"cell_type":"markdown","source":["3. Gender Demographics  \n","   - Percentage and Count of Male Players  \n","   - Percentage and Count of Female Players  \n","   - Percentage and Count of Other / Non-Disclosed  \n","\n"],"metadata":{"id":"fhEaJ3rbdHnW"}},{"cell_type":"code","source":["gender_counts = df.groupby('Gender')['SN'].nunique()\n","total_players = gender_counts.sum()\n","gender_counts"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":210},"id":"xbycCSZcgaBR","executionInfo":{"status":"ok","timestamp":1729588533028,"user_tz":-330,"elapsed":424,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"18aace04-bf9a-47fd-f4ae-eee90eea6867"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Gender\n","Female                    81\n","Male                     484\n","Other / Non-Disclosed     11\n","Name: SN, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SN</th>\n","    </tr>\n","    <tr>\n","      <th>Gender</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Female</th>\n","      <td>81</td>\n","    </tr>\n","    <tr>\n","      <th>Male</th>\n","      <td>484</td>\n","    </tr>\n","    <tr>\n","      <th>Other / Non-Disclosed</th>\n","      <td>11</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":108}]},{"cell_type":"code","source":["for g in gender_counts.index:\n","    g_count = gender_counts[g]\n","    g_percentage = (g_count / total_players) * 100\n","    print(f\"{g} Players Count: {g_count}\")\n","    print(f\"{g} Players Percentage: {g_percentage:.2f}%\")\n","    print()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S_PPhWK8hFiw","executionInfo":{"status":"ok","timestamp":1729588995129,"user_tz":-330,"elapsed":442,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"5f831541-829e-4d69-927b-4de6a2ea0201"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Female Players Count: 81\n","Female Players Percentage: 14.06%\n","\n","Male Players Count: 484\n","Male Players Percentage: 84.03%\n","\n","Other / Non-Disclosed Players Count: 11\n","Other / Non-Disclosed Players Percentage: 1.91%\n","\n"]}]},{"cell_type":"markdown","source":["4. Purchasing Analysis (Gender)  \n","   - The following, each broken by gender:  \n","     - Purchase Count  \n","     - Average Purchase Price  \n","     - Total Purchase Value  \n","     - Average Purchase Total per Person by Gender  \n","\n"],"metadata":{"id":"uFEFZVQPdHkq"}},{"cell_type":"code","source":["df_gender = df.groupby('Gender')"],"metadata":{"id":"hrBZG5UJij_I"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for g in df_gender.groups.keys():\n","    print(f'\\n\\nGender: {g}')\n","    print(f\"Purchase Count: {len(df_gender.get_group(g))}\")\n","    print(f\"Average Purchase Price: {df_gender.get_group(g)['Price'].mean():.2f}\")\n","    print(f\"Total Purchase Value: {df_gender.get_group(g)['Price'].sum():.2f}\")\n","    print(f\"Average Purchase Total per Person by Gender: {df_gender.get_group(g)['Price'].sum()/gender_counts[g]:.2f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6UlwJ7VrixU2","executionInfo":{"status":"ok","timestamp":1729589952188,"user_tz":-330,"elapsed":409,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"f90cc63b-6356-4f1c-fd2c-4bb463444a02"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","\n"," Gender: Female\n","Purchase Count: 113\n","Average Purchase Price: 3.20\n","Total Purchase Value: 361.94\n","Average Purchase Total per Person by Gender: 4.47\n","\n","\n"," Gender: Male\n","Purchase Count: 652\n","Average Purchase Price: 3.02\n","Total Purchase Value: 1967.64\n","Average Purchase Total per Person by Gender: 4.07\n","\n","\n"," Gender: Other / Non-Disclosed\n","Purchase Count: 15\n","Average Purchase Price: 3.35\n","Total Purchase Value: 50.19\n","Average Purchase Total per Person by Gender: 4.56\n"]}]},{"cell_type":"markdown","source":["5. Age Demographics  \n","   - The following, each broken into bins of 4 years (i.e. <10, 10-14, 15-19, etc.):  \n","     - Purchase Count  \n","     - Average Purchase Price  \n","     - Total Purchase Value  \n","     - Average Purchase Total per Person by Age Group  \n","\n"],"metadata":{"id":"JXUMfW1zdHh2"}},{"cell_type":"code","source":["df_t = df.copy()\n","\n","def categorize_observation(value):\n","    if value < 10:\n","        return '<10'\n","    elif 10 <= value < 14:\n","        return '10-14'\n","    elif 15 <= value < 19:\n","        return '15-19'\n","    else:\n","        return '>19'\n","\n","df_t['Category'] = df_t['Age'].apply(categorize_observation)\n","cat_grouped = df_t.groupby(['Category'])\n","category_counts = cat_grouped['SN'].nunique()"],"metadata":{"id":"kjFP1YwokOBH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for c in cat_grouped.groups.keys():\n","    print(f'\\nCategory: {c}')\n","    print(f\"Purchase Count: {len(cat_grouped.get_group(c))}\")\n","    print(f\"Average Purchase Price: {cat_grouped.get_group(c)['Price'].mean():.2f}\")\n","    print(f\"Total Purchase Value: {cat_grouped.get_group(c)['Price'].sum():.2f}\")\n","    print(f\"Average Purchase Total per Person by Age Group: {cat_grouped.get_group(c)['Price'].sum()/category_counts[c]:.2f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-qV2ld5ekNxe","executionInfo":{"status":"ok","timestamp":1729590167989,"user_tz":-330,"elapsed":452,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"2c0fd3f5-03b0-45a3-f552-19dc8088831c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Category: 10-14\n","Purchase Count: 26\n","Average Purchase Price: 2.92\n","Total Purchase Value: 75.87\n","Average Purchase Total per Person by Age Group: 3.79\n","\n","Category: 15-19\n","Purchase Count: 113\n","Average Purchase Price: 3.03\n","Total Purchase Value: 342.91\n","Average Purchase Total per Person by Age Group: 3.81\n","\n","Category: <10\n","Purchase Count: 23\n","Average Purchase Price: 3.35\n","Total Purchase Value: 77.13\n","Average Purchase Total per Person by Age Group: 4.54\n","\n","Category: >19\n","Purchase Count: 618\n","Average Purchase Price: 3.05\n","Total Purchase Value: 1883.86\n","Average Purchase Total per Person by Age Group: 4.20\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-148-808c5381e769>:3: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  print(f\"Purchase Count: {len(cat_grouped.get_group(c))}\")\n","<ipython-input-148-808c5381e769>:4: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  print(f\"Average Purchase Price: {cat_grouped.get_group(c)['Price'].mean():.2f}\")\n","<ipython-input-148-808c5381e769>:5: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  print(f\"Total Purchase Value: {cat_grouped.get_group(c)['Price'].sum():.2f}\")\n","<ipython-input-148-808c5381e769>:6: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n","  print(f\"Average Purchase Total per Person by Age Group: {cat_grouped.get_group(c)['Price'].sum()/category_counts[c]:.2f}\")\n"]}]},{"cell_type":"markdown","source":["6. Top Spenders  \n","   - Identify the top 5 spenders in the game by total purchase value, then list (in a table):  \n","     - SN  \n","     - Purchase Count  \n","     - Average Purchase Price  \n","     - Total Purchase Value  \n"],"metadata":{"id":"5aeO_bW7dHdF"}},{"source":["top_spenders = df.groupby('SN')['Price'].agg(['sum', 'count', 'mean'])\n","top_spenders.rename(columns={'sum': 'Total Purchase Value', 'count': 'Purchase Count', 'mean': 'Average Purchase Price'}, inplace=True)\n","\n","top_5_spenders = top_spenders.sort_values(by=['Total Purchase Value'], ascending=False).head(5)\n","top_5_spenders"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"i7xGBP9ZoAIE","executionInfo":{"status":"ok","timestamp":1729590524768,"user_tz":-330,"elapsed":468,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"6e98f441-908e-4d47-bcbe-4c7ffd680a35"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             Total Purchase Value  Purchase Count  Average Purchase Price\n","SN                                                                       \n","Lisosia93                   18.96               5                3.792000\n","Idastidru52                 15.45               4                3.862500\n","Chamjask73                  13.83               3                4.610000\n","Iral74                      13.62               4                3.405000\n","Iskadarya95                 13.10               3                4.366667"],"text/html":["\n","  <div id=\"df-4f0f57a3-13b5-42c8-b338-a4219d25be0f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Total Purchase Value</th>\n","      <th>Purchase Count</th>\n","      <th>Average Purchase Price</th>\n","    </tr>\n","    <tr>\n","      <th>SN</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Lisosia93</th>\n","      <td>18.96</td>\n","      <td>5</td>\n","      <td>3.792000</td>\n","    </tr>\n","    <tr>\n","      <th>Idastidru52</th>\n","      <td>15.45</td>\n","      <td>4</td>\n","      <td>3.862500</td>\n","    </tr>\n","    <tr>\n","      <th>Chamjask73</th>\n","      <td>13.83</td>\n","      <td>3</td>\n","      <td>4.610000</td>\n","    </tr>\n","    <tr>\n","      <th>Iral74</th>\n","      <td>13.62</td>\n","      <td>4</td>\n","      <td>3.405000</td>\n","    </tr>\n","    <tr>\n","      <th>Iskadarya95</th>\n","      <td>13.10</td>\n","      <td>3</td>\n","      <td>4.366667</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4f0f57a3-13b5-42c8-b338-a4219d25be0f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4f0f57a3-13b5-42c8-b338-a4219d25be0f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4f0f57a3-13b5-42c8-b338-a4219d25be0f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dc4241b7-ce20-4680-8ad2-70f145eff431\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dc4241b7-ce20-4680-8ad2-70f145eff431')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dc4241b7-ce20-4680-8ad2-70f145eff431 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_e1380533-7d3f-440c-9580-f566fd37f538\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('top_5_spenders')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e1380533-7d3f-440c-9580-f566fd37f538 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('top_5_spenders');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"top_5_spenders","summary":"{\n  \"name\": \"top_5_spenders\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"SN\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Idastidru52\",\n          \"Iskadarya95\",\n          \"Chamjask73\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Purchase Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.3857430708272,\n        \"min\": 13.100000000000001,\n        \"max\": 18.96,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          15.45,\n          13.100000000000001,\n          13.83\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Purchase Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 3,\n        \"max\": 5,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          5,\n          4,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Average Purchase Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4802286145391821,\n        \"min\": 3.4050000000000002,\n        \"max\": 4.61,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3.8625,\n          4.366666666666667,\n          4.61\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":152}]},{"cell_type":"markdown","source":["\n","7. Most Popular Items  \n","   - Identify the 5 most popular items by purchase count, then list (in a table):  \n","     - Item ID  \n","     - Item Name  \n","     - Purchase Count  \n","     - Item Price  \n","     - Total Purchase Value  \n"],"metadata":{"id":"gnUrI4nkdHa4"}},{"source":["popular_items = df.groupby(['Item ID', 'Item Name'])['Price'].agg(['count', 'mean', 'sum'])\n","popular_items.rename(columns={'count': 'Purchase Count', 'mean': 'Item Price', 'sum': 'Total Purchase Value'}, inplace=True)\n","\n","top_5_popular_items = popular_items.sort_values(by=['Purchase Count'], ascending=False).head(5)\n","top_5_popular_items"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"evAYbJDQpIic","executionInfo":{"status":"ok","timestamp":1729590830786,"user_tz":-330,"elapsed":454,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"afbfe9c3-1338-41db-c88f-44d60b05faf9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                      Purchase Count  \\\n","Item ID Item Name                                                      \n","178     Oathbreaker, Last Hope of the Breaking Storm              12   \n","145     Fiery Glass Crusader                                       9   \n","108     Extraction, Quickblade Of Trembling Hands                  9   \n","82      Nirvana                                                    9   \n","19      Pursuit, Cudgel of Necromancy                              8   \n","\n","                                                      Item Price  \\\n","Item ID Item Name                                                  \n","178     Oathbreaker, Last Hope of the Breaking Storm        4.23   \n","145     Fiery Glass Crusader                                4.58   \n","108     Extraction, Quickblade Of Trembling Hands           3.53   \n","82      Nirvana                                             4.90   \n","19      Pursuit, Cudgel of Necromancy                       1.02   \n","\n","                                                      Total Purchase Value  \n","Item ID Item Name                                                           \n","178     Oathbreaker, Last Hope of the Breaking Storm                 50.76  \n","145     Fiery Glass Crusader                                         41.22  \n","108     Extraction, Quickblade Of Trembling Hands                    31.77  \n","82      Nirvana                                                      44.10  \n","19      Pursuit, Cudgel of Necromancy                                 8.16  "],"text/html":["\n","  <div id=\"df-3fada043-64b4-4e00-a9ee-884a45839609\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>Purchase Count</th>\n","      <th>Item Price</th>\n","      <th>Total Purchase Value</th>\n","    </tr>\n","    <tr>\n","      <th>Item ID</th>\n","      <th>Item Name</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>178</th>\n","      <th>Oathbreaker, Last Hope of the Breaking Storm</th>\n","      <td>12</td>\n","      <td>4.23</td>\n","      <td>50.76</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <th>Fiery Glass Crusader</th>\n","      <td>9</td>\n","      <td>4.58</td>\n","      <td>41.22</td>\n","    </tr>\n","    <tr>\n","      <th>108</th>\n","      <th>Extraction, Quickblade Of Trembling Hands</th>\n","      <td>9</td>\n","      <td>3.53</td>\n","      <td>31.77</td>\n","    </tr>\n","    <tr>\n","      <th>82</th>\n","      <th>Nirvana</th>\n","      <td>9</td>\n","      <td>4.90</td>\n","      <td>44.10</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <th>Pursuit, Cudgel of Necromancy</th>\n","      <td>8</td>\n","      <td>1.02</td>\n","      <td>8.16</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3fada043-64b4-4e00-a9ee-884a45839609')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3fada043-64b4-4e00-a9ee-884a45839609 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3fada043-64b4-4e00-a9ee-884a45839609');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-70c6d666-c965-449a-9778-606c49f156b4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-70c6d666-c965-449a-9778-606c49f156b4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-70c6d666-c965-449a-9778-606c49f156b4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_4514c0ea-69b3-4998-b700-bb911ed6742f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('top_5_popular_items')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_4514c0ea-69b3-4998-b700-bb911ed6742f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('top_5_popular_items');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"top_5_popular_items","summary":"{\n  \"name\": \"top_5_popular_items\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Purchase Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 8,\n        \"max\": 12,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          12,\n          9,\n          8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Item Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.5568461709494616,\n        \"min\": 1.02,\n        \"max\": 4.9,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4.58,\n          1.02,\n          3.53\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Purchase Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16.58682067184667,\n        \"min\": 8.16,\n        \"max\": 50.760000000000005,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          41.22,\n          8.16,\n          31.77\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":157}]},{"cell_type":"markdown","source":["\n","8. Most Profitable Items  \n","   - The 5 most profitable items by total purchase value, then list (in a table):  \n","     - Item ID  \n","     - Item Name  \n","     - Purchase Count  \n","     - Item Price  \n","     - Total Purchase Value  "],"metadata":{"id":"rhdVJ1rWdHCf"}},{"source":["profitable_items = df.groupby(['Item ID', 'Item Name'])['Price'].agg(['count', 'mean', 'sum'])\n","profitable_items.rename(columns={'count': 'Purchase Count', 'mean': 'Item Price', 'sum': 'Total Purchase Value'}, inplace=True)\n","\n","top_5_profitable_items = profitable_items.sort_values(by=['Total Purchase Value'], ascending=False).head(5)\n","top_5_profitable_items"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"lRmDT0gEpmXw","executionInfo":{"status":"ok","timestamp":1729590893670,"user_tz":-330,"elapsed":467,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"25050f09-de7f-4b7d-c3d9-e478ae540aec"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                      Purchase Count  \\\n","Item ID Item Name                                                      \n","178     Oathbreaker, Last Hope of the Breaking Storm              12   \n","82      Nirvana                                                    9   \n","145     Fiery Glass Crusader                                       9   \n","92      Final Critic                                               8   \n","103     Singed Scalpel                                             8   \n","\n","                                                      Item Price  \\\n","Item ID Item Name                                                  \n","178     Oathbreaker, Last Hope of the Breaking Storm        4.23   \n","82      Nirvana                                             4.90   \n","145     Fiery Glass Crusader                                4.58   \n","92      Final Critic                                        4.88   \n","103     Singed Scalpel                                      4.35   \n","\n","                                                      Total Purchase Value  \n","Item ID Item Name                                                           \n","178     Oathbreaker, Last Hope of the Breaking Storm                 50.76  \n","82      Nirvana                                                      44.10  \n","145     Fiery Glass Crusader                                         41.22  \n","92      Final Critic                                                 39.04  \n","103     Singed Scalpel                                               34.80  "],"text/html":["\n","  <div id=\"df-4adc973a-9c94-40e8-80f1-55ade0f79db5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>Purchase Count</th>\n","      <th>Item Price</th>\n","      <th>Total Purchase Value</th>\n","    </tr>\n","    <tr>\n","      <th>Item ID</th>\n","      <th>Item Name</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>178</th>\n","      <th>Oathbreaker, Last Hope of the Breaking Storm</th>\n","      <td>12</td>\n","      <td>4.23</td>\n","      <td>50.76</td>\n","    </tr>\n","    <tr>\n","      <th>82</th>\n","      <th>Nirvana</th>\n","      <td>9</td>\n","      <td>4.90</td>\n","      <td>44.10</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <th>Fiery Glass Crusader</th>\n","      <td>9</td>\n","      <td>4.58</td>\n","      <td>41.22</td>\n","    </tr>\n","    <tr>\n","      <th>92</th>\n","      <th>Final Critic</th>\n","      <td>8</td>\n","      <td>4.88</td>\n","      <td>39.04</td>\n","    </tr>\n","    <tr>\n","      <th>103</th>\n","      <th>Singed Scalpel</th>\n","      <td>8</td>\n","      <td>4.35</td>\n","      <td>34.80</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4adc973a-9c94-40e8-80f1-55ade0f79db5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4adc973a-9c94-40e8-80f1-55ade0f79db5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4adc973a-9c94-40e8-80f1-55ade0f79db5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-50728d26-32a3-4b7c-a84f-28afd95b46dc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-50728d26-32a3-4b7c-a84f-28afd95b46dc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-50728d26-32a3-4b7c-a84f-28afd95b46dc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f57f46f7-4a4d-468f-9d2d-faa5366513dd\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('top_5_profitable_items')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f57f46f7-4a4d-468f-9d2d-faa5366513dd button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('top_5_profitable_items');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"top_5_profitable_items","summary":"{\n  \"name\": \"top_5_profitable_items\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Purchase Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 8,\n        \"max\": 12,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          12,\n          9,\n          8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Item Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3031006433513463,\n        \"min\": 4.23,\n        \"max\": 4.9,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4.9,\n          4.35,\n          4.58\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Purchase Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.9656583878059966,\n        \"min\": 34.8,\n        \"max\": 50.760000000000005,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          44.1,\n          34.8,\n          41.22\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":158}]},{"cell_type":"markdown","source":["# Question 3"],"metadata":{"id":"qTqnnmVL9Jl0"}},{"cell_type":"markdown","source":["Fuel economy data are the result of vehicle testing done at the Environmental Protection Agency's National Vehicle and Fuel Emissions Laboratory in Ann Arbor, Michigan, and by vehicle manufacturers with oversight by EPA.\n","\n","Dataset Description:  \n","- **Model**: Vehicle make and model  \n","- **Displ**: Engine displacement - the size of an engine in liters  \n","- **Cyl**: The number of cylinders in a particular engine  \n","- **Trans**: Transmission type and number of gears  \n","- **Drive**: Drive axle type (2WD = 2-wheel drive, 4WD = 4-wheel/all-wheel drive)  \n","- **Fuel**: Fuel type  \n","- **Cert Region***: Certification region code  \n","- **Sales Area***: Certification region code  \n","- **Stnd**: Vehicle emissions standard  \n","- **Stnd Description***: Vehicle emissions standard description  \n","- **Underhood ID**: This is a 12-digit ID number that can be found on the underhood emission label of every vehicle. It's required by the EPA to designate its \"test group\" or \"engine family.\"  \n","- **Veh Class**: EPA vehicle class  \n","- **Air Pollution Score**: Air pollution score (smog rating)  \n","- **City MPG**: Estimated city mpg (miles/gallon)  \n","- **Hwy MPG**: Estimated highway mpg (miles/gallon)  \n","- **Cmb MPG**: Estimated combined mpg (miles/gallon)  \n","- **Greenhouse Gas Score**: Greenhouse gas rating  \n","- **SmartWay**: Yes, No, or Elite  \n","- **Comb CO2***: Combined city/highway CO2 tailpipe emissions in grams per mile  \n","\n","*Note: For more detailed information about the dataset, refer to the text file.*\n","\n","Perform the pre-requisites:\n","\n"],"metadata":{"id":"2Mv9VGxw8zhV"}},{"cell_type":"markdown","source":["**Assessing the Data**  (all_alpha_xx)\n","\n","i. Data cleaning  \n","ii. Inspection  \n","iii. Manipulation if required  \n","iv. Extracting meaningful visualization based on your understanding  \n","v. Data consolidation if required\n","\n"],"metadata":{"id":"EH2ItJ55uL8g"}},{"cell_type":"code","source":["all_alpha_08 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Sets/all_alpha_08.csv')\n","all_alpha_08.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"rZ9FPcUguOK7","executionInfo":{"status":"ok","timestamp":1729592193241,"user_tz":-330,"elapsed":1099,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"dd09a738-11d8-4522-f880-d407c25bb740"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Model  Displ      Cyl    Trans Drive      Fuel Sales Area Stnd  \\\n","0  ACURA MDX    3.7  (6 cyl)  Auto-S5   4WD  Gasoline         CA   U2   \n","1  ACURA MDX    3.7  (6 cyl)  Auto-S5   4WD  Gasoline         FA   B5   \n","2  ACURA RDX    2.3  (4 cyl)  Auto-S5   4WD  Gasoline         CA   U2   \n","3  ACURA RDX    2.3  (4 cyl)  Auto-S5   4WD  Gasoline         FA   B5   \n","4   ACURA RL    3.5  (6 cyl)  Auto-S5   4WD  Gasoline         CA   U2   \n","\n","   Underhood ID    Veh Class Air Pollution Score FE Calc Appr City MPG  \\\n","0  8HNXT03.7PKR          SUV                   7          Drv       15   \n","1  8HNXT03.7PKR          SUV                   6          Drv       15   \n","2  8HNXT02.3DKR          SUV                   7          Drv       17   \n","3  8HNXT02.3DKR          SUV                   6          Drv       17   \n","4  8HNXV03.5HKR  midsize car                   7          Drv       16   \n","\n","  Hwy MPG Cmb MPG  Unadj Cmb MPG Greenhouse Gas Score SmartWay  \n","0      20      17        22.0527                    4       no  \n","1      20      17        22.0527                    4       no  \n","2      22      19        24.1745                    5       no  \n","3      22      19        24.1745                    5       no  \n","4      24      19        24.5629                    5       no  "],"text/html":["\n","  <div id=\"df-cee1e854-13f4-49a6-8061-674d37225042\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Displ</th>\n","      <th>Cyl</th>\n","      <th>Trans</th>\n","      <th>Drive</th>\n","      <th>Fuel</th>\n","      <th>Sales Area</th>\n","      <th>Stnd</th>\n","      <th>Underhood ID</th>\n","      <th>Veh Class</th>\n","      <th>Air Pollution Score</th>\n","      <th>FE Calc Appr</th>\n","      <th>City MPG</th>\n","      <th>Hwy MPG</th>\n","      <th>Cmb MPG</th>\n","      <th>Unadj Cmb MPG</th>\n","      <th>Greenhouse Gas Score</th>\n","      <th>SmartWay</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ACURA MDX</td>\n","      <td>3.7</td>\n","      <td>(6 cyl)</td>\n","      <td>Auto-S5</td>\n","      <td>4WD</td>\n","      <td>Gasoline</td>\n","      <td>CA</td>\n","      <td>U2</td>\n","      <td>8HNXT03.7PKR</td>\n","      <td>SUV</td>\n","      <td>7</td>\n","      <td>Drv</td>\n","      <td>15</td>\n","      <td>20</td>\n","      <td>17</td>\n","      <td>22.0527</td>\n","      <td>4</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ACURA MDX</td>\n","      <td>3.7</td>\n","      <td>(6 cyl)</td>\n","      <td>Auto-S5</td>\n","      <td>4WD</td>\n","      <td>Gasoline</td>\n","      <td>FA</td>\n","      <td>B5</td>\n","      <td>8HNXT03.7PKR</td>\n","      <td>SUV</td>\n","      <td>6</td>\n","      <td>Drv</td>\n","      <td>15</td>\n","      <td>20</td>\n","      <td>17</td>\n","      <td>22.0527</td>\n","      <td>4</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ACURA RDX</td>\n","      <td>2.3</td>\n","      <td>(4 cyl)</td>\n","      <td>Auto-S5</td>\n","      <td>4WD</td>\n","      <td>Gasoline</td>\n","      <td>CA</td>\n","      <td>U2</td>\n","      <td>8HNXT02.3DKR</td>\n","      <td>SUV</td>\n","      <td>7</td>\n","      <td>Drv</td>\n","      <td>17</td>\n","      <td>22</td>\n","      <td>19</td>\n","      <td>24.1745</td>\n","      <td>5</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ACURA RDX</td>\n","      <td>2.3</td>\n","      <td>(4 cyl)</td>\n","      <td>Auto-S5</td>\n","      <td>4WD</td>\n","      <td>Gasoline</td>\n","      <td>FA</td>\n","      <td>B5</td>\n","      <td>8HNXT02.3DKR</td>\n","      <td>SUV</td>\n","      <td>6</td>\n","      <td>Drv</td>\n","      <td>17</td>\n","      <td>22</td>\n","      <td>19</td>\n","      <td>24.1745</td>\n","      <td>5</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ACURA RL</td>\n","      <td>3.5</td>\n","      <td>(6 cyl)</td>\n","      <td>Auto-S5</td>\n","      <td>4WD</td>\n","      <td>Gasoline</td>\n","      <td>CA</td>\n","      <td>U2</td>\n","      <td>8HNXV03.5HKR</td>\n","      <td>midsize car</td>\n","      <td>7</td>\n","      <td>Drv</td>\n","      <td>16</td>\n","      <td>24</td>\n","      <td>19</td>\n","      <td>24.5629</td>\n","      <td>5</td>\n","      <td>no</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cee1e854-13f4-49a6-8061-674d37225042')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cee1e854-13f4-49a6-8061-674d37225042 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cee1e854-13f4-49a6-8061-674d37225042');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b2cbcc70-3efe-456e-bce2-ff1db540ac1e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b2cbcc70-3efe-456e-bce2-ff1db540ac1e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b2cbcc70-3efe-456e-bce2-ff1db540ac1e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"all_alpha_08","summary":"{\n  \"name\": \"all_alpha_08\",\n  \"rows\": 2404,\n  \"fields\": [\n    {\n      \"column\": \"Model\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 436,\n        \"samples\": [\n          \"TOYOTA Avalon\",\n          \"CHEVROLET Aveo\",\n          \"MERCEDES-BENZ E350\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Displ\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3357853838729523,\n        \"min\": 1.3,\n        \"max\": 8.4,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          7.0,\n          1.3,\n          2.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cyl\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"(4 cyl)\",\n          \"(16 cyl)\",\n          \"(6 cyl)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Trans\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Auto-L5\",\n          \"S8\",\n          \"Auto-S5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Drive\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"2WD\",\n          \"4WD\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fuel\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"ethanol/gas\",\n          \"CNG\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sales Area\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"CA\",\n          \"FA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stnd\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"B2\",\n          \"B3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Underhood ID\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 343,\n        \"samples\": [\n          \"8TKXV03.05FA\",\n          \"8FMXT06.85HR\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Veh Class\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"van\",\n          \"midsize car\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Air Pollution Score\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"9\",\n          \"0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FE Calc Appr\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"5cy\",\n          \"Drv\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City MPG\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 39,\n        \"samples\": [\n          \"40\",\n          \"35\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hwy MPG\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 43,\n        \"samples\": [\n          \"45\",\n          \"21/29\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cmb MPG\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 38,\n        \"samples\": [\n          \"42\",\n          \"34\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unadj Cmb MPG\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.366169872119715,\n        \"min\": 10.0184,\n        \"max\": 65.7778,\n        \"num_unique_values\": 721,\n        \"samples\": [\n          21.5407,\n          30.0621\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Greenhouse Gas Score\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"4\",\n          \"9\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SmartWay\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"yes\",\n          \"no\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":159}]},{"cell_type":"code","source":["all_alpha_08.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"KjdhpSoKu_b5","executionInfo":{"status":"ok","timestamp":1729592304542,"user_tz":-330,"elapsed":465,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"59dd3e36-5c0f-46fb-92e6-cfc8b3037204"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             Displ  Unadj Cmb MPG\n","count  2404.000000    2205.000000\n","mean      3.748918      23.916104\n","std       1.335785       6.366170\n","min       1.300000      10.018400\n","25%       2.500000      19.113900\n","50%       3.500000      23.921300\n","75%       4.800000      27.869300\n","max       8.400000      65.777800"],"text/html":["\n","  <div id=\"df-cb4352ae-ffed-44b8-93c2-caafbd380c07\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Displ</th>\n","      <th>Unadj Cmb MPG</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>2404.000000</td>\n","      <td>2205.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>3.748918</td>\n","      <td>23.916104</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1.335785</td>\n","      <td>6.366170</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.300000</td>\n","      <td>10.018400</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2.500000</td>\n","      <td>19.113900</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>3.500000</td>\n","      <td>23.921300</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>4.800000</td>\n","      <td>27.869300</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>8.400000</td>\n","      <td>65.777800</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cb4352ae-ffed-44b8-93c2-caafbd380c07')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cb4352ae-ffed-44b8-93c2-caafbd380c07 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cb4352ae-ffed-44b8-93c2-caafbd380c07');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0ceae73d-bfcb-4d4b-ab5f-7f5030272d7c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0ceae73d-bfcb-4d4b-ab5f-7f5030272d7c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0ceae73d-bfcb-4d4b-ab5f-7f5030272d7c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"all_alpha_08\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Displ\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 848.653168224525,\n        \"min\": 1.3,\n        \"max\": 2404.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.74891846921797,\n          3.5,\n          2404.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unadj Cmb MPG\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 770.8574541160726,\n        \"min\": 6.366169872119715,\n        \"max\": 2205.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          23.91610430839002,\n          23.9213,\n          2205.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":161}]},{"cell_type":"code","source":["all_alpha_08.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LAwHk7ZQuwth","executionInfo":{"status":"ok","timestamp":1729592281938,"user_tz":-330,"elapsed":442,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"cdf93ef5-ac66-4c28-d626-1385a27a9317"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 2404 entries, 0 to 2403\n","Data columns (total 18 columns):\n"," #   Column                Non-Null Count  Dtype  \n","---  ------                --------------  -----  \n"," 0   Model                 2404 non-null   object \n"," 1   Displ                 2404 non-null   float64\n"," 2   Cyl                   2205 non-null   object \n"," 3   Trans                 2205 non-null   object \n"," 4   Drive                 2311 non-null   object \n"," 5   Fuel                  2404 non-null   object \n"," 6   Sales Area            2404 non-null   object \n"," 7   Stnd                  2404 non-null   object \n"," 8   Underhood ID          2404 non-null   object \n"," 9   Veh Class             2404 non-null   object \n"," 10  Air Pollution Score   2404 non-null   object \n"," 11  FE Calc Appr          2205 non-null   object \n"," 12  City MPG              2205 non-null   object \n"," 13  Hwy MPG               2205 non-null   object \n"," 14  Cmb MPG               2205 non-null   object \n"," 15  Unadj Cmb MPG         2205 non-null   float64\n"," 16  Greenhouse Gas Score  2205 non-null   object \n"," 17  SmartWay              2404 non-null   object \n","dtypes: float64(2), object(16)\n","memory usage: 338.2+ KB\n"]}]},{"cell_type":"code","source":["all_alpha_08.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":649},"id":"55YSPkF6uwgJ","executionInfo":{"status":"ok","timestamp":1729592377523,"user_tz":-330,"elapsed":448,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"4ce83ed0-612a-4410-c50f-df0c1d8f708f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Model                     0\n","Displ                     0\n","Cyl                     199\n","Trans                   199\n","Drive                    93\n","Fuel                      0\n","Sales Area                0\n","Stnd                      0\n","Underhood ID              0\n","Veh Class                 0\n","Air Pollution Score       0\n","FE Calc Appr            199\n","City MPG                199\n","Hwy MPG                 199\n","Cmb MPG                 199\n","Unadj Cmb MPG           199\n","Greenhouse Gas Score    199\n","SmartWay                  0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Model</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Displ</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Cyl</th>\n","      <td>199</td>\n","    </tr>\n","    <tr>\n","      <th>Trans</th>\n","      <td>199</td>\n","    </tr>\n","    <tr>\n","      <th>Drive</th>\n","      <td>93</td>\n","    </tr>\n","    <tr>\n","      <th>Fuel</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Sales Area</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Stnd</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Underhood ID</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Veh Class</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Air Pollution Score</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>FE Calc Appr</th>\n","      <td>199</td>\n","    </tr>\n","    <tr>\n","      <th>City MPG</th>\n","      <td>199</td>\n","    </tr>\n","    <tr>\n","      <th>Hwy MPG</th>\n","      <td>199</td>\n","    </tr>\n","    <tr>\n","      <th>Cmb MPG</th>\n","      <td>199</td>\n","    </tr>\n","    <tr>\n","      <th>Unadj Cmb MPG</th>\n","      <td>199</td>\n","    </tr>\n","    <tr>\n","      <th>Greenhouse Gas Score</th>\n","      <td>199</td>\n","    </tr>\n","    <tr>\n","      <th>SmartWay</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":162}]},{"cell_type":"code","source":["all_alpha_08.head(2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"kV8WH9rrvY5r","executionInfo":{"status":"ok","timestamp":1729592417470,"user_tz":-330,"elapsed":622,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"0ac66b3f-8ae9-47a5-bb0b-9bd7d6f7711c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Model  Displ      Cyl    Trans Drive      Fuel Sales Area Stnd  \\\n","0  ACURA MDX    3.7  (6 cyl)  Auto-S5   4WD  Gasoline         CA   U2   \n","1  ACURA MDX    3.7  (6 cyl)  Auto-S5   4WD  Gasoline         FA   B5   \n","\n","   Underhood ID Veh Class Air Pollution Score FE Calc Appr City MPG Hwy MPG  \\\n","0  8HNXT03.7PKR       SUV                   7          Drv       15      20   \n","1  8HNXT03.7PKR       SUV                   6          Drv       15      20   \n","\n","  Cmb MPG  Unadj Cmb MPG Greenhouse Gas Score SmartWay  \n","0      17        22.0527                    4       no  \n","1      17        22.0527                    4       no  "],"text/html":["\n","  <div id=\"df-97cffa18-2981-4f95-85ed-b426ca14354e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Displ</th>\n","      <th>Cyl</th>\n","      <th>Trans</th>\n","      <th>Drive</th>\n","      <th>Fuel</th>\n","      <th>Sales Area</th>\n","      <th>Stnd</th>\n","      <th>Underhood ID</th>\n","      <th>Veh Class</th>\n","      <th>Air Pollution Score</th>\n","      <th>FE Calc Appr</th>\n","      <th>City MPG</th>\n","      <th>Hwy MPG</th>\n","      <th>Cmb MPG</th>\n","      <th>Unadj Cmb MPG</th>\n","      <th>Greenhouse Gas Score</th>\n","      <th>SmartWay</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ACURA MDX</td>\n","      <td>3.7</td>\n","      <td>(6 cyl)</td>\n","      <td>Auto-S5</td>\n","      <td>4WD</td>\n","      <td>Gasoline</td>\n","      <td>CA</td>\n","      <td>U2</td>\n","      <td>8HNXT03.7PKR</td>\n","      <td>SUV</td>\n","      <td>7</td>\n","      <td>Drv</td>\n","      <td>15</td>\n","      <td>20</td>\n","      <td>17</td>\n","      <td>22.0527</td>\n","      <td>4</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ACURA MDX</td>\n","      <td>3.7</td>\n","      <td>(6 cyl)</td>\n","      <td>Auto-S5</td>\n","      <td>4WD</td>\n","      <td>Gasoline</td>\n","      <td>FA</td>\n","      <td>B5</td>\n","      <td>8HNXT03.7PKR</td>\n","      <td>SUV</td>\n","      <td>6</td>\n","      <td>Drv</td>\n","      <td>15</td>\n","      <td>20</td>\n","      <td>17</td>\n","      <td>22.0527</td>\n","      <td>4</td>\n","      <td>no</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97cffa18-2981-4f95-85ed-b426ca14354e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-97cffa18-2981-4f95-85ed-b426ca14354e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-97cffa18-2981-4f95-85ed-b426ca14354e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fcbd58c5-0e5f-4e58-b600-97154a559313\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fcbd58c5-0e5f-4e58-b600-97154a559313')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fcbd58c5-0e5f-4e58-b600-97154a559313 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"all_alpha_08","summary":"{\n  \"name\": \"all_alpha_08\",\n  \"rows\": 2404,\n  \"fields\": [\n    {\n      \"column\": \"Model\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 436,\n        \"samples\": [\n          \"TOYOTA Avalon\",\n          \"CHEVROLET Aveo\",\n          \"MERCEDES-BENZ E350\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Displ\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3357853838729523,\n        \"min\": 1.3,\n        \"max\": 8.4,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          7.0,\n          1.3,\n          2.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cyl\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"(4 cyl)\",\n          \"(16 cyl)\",\n          \"(6 cyl)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Trans\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Auto-L5\",\n          \"S8\",\n          \"Auto-S5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Drive\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"2WD\",\n          \"4WD\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fuel\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"ethanol/gas\",\n          \"CNG\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sales Area\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"CA\",\n          \"FA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stnd\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"B2\",\n          \"B3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Underhood ID\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 343,\n        \"samples\": [\n          \"8TKXV03.05FA\",\n          \"8FMXT06.85HR\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Veh Class\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"van\",\n          \"midsize car\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Air Pollution Score\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"9\",\n          \"0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FE Calc Appr\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"5cy\",\n          \"Drv\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City MPG\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 39,\n        \"samples\": [\n          \"40\",\n          \"35\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hwy MPG\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 43,\n        \"samples\": [\n          \"45\",\n          \"21/29\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cmb MPG\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 38,\n        \"samples\": [\n          \"42\",\n          \"34\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unadj Cmb MPG\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.366169872119715,\n        \"min\": 10.0184,\n        \"max\": 65.7778,\n        \"num_unique_values\": 721,\n        \"samples\": [\n          21.5407,\n          30.0621\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Greenhouse Gas Score\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"4\",\n          \"9\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SmartWay\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"yes\",\n          \"no\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":163}]},{"cell_type":"code","source":["all_alpha_08['Cyl'].bfill(inplace=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pIIDgdkBveio","executionInfo":{"status":"ok","timestamp":1729592533622,"user_tz":-330,"elapsed":451,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"74a49cc0-bbb5-466b-cfd7-ddec85408a79"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-164-7a70e2625f75>:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n","The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n","\n","For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n","\n","\n","  all_alpha_08['Cyl'].bfill(inplace=True)\n"]}]},{"cell_type":"code","source":["all_alpha_08.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":649},"id":"sER5P7GTvefg","executionInfo":{"status":"ok","timestamp":1729592746536,"user_tz":-330,"elapsed":580,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"bfc664f2-5967-4fd7-d1eb-9eb422cd6a36"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Model                     0\n","Displ                     0\n","Cyl                       0\n","Trans                   199\n","Drive                    93\n","Fuel                      0\n","Sales Area                0\n","Stnd                      0\n","Underhood ID              0\n","Veh Class                 0\n","Air Pollution Score       0\n","FE Calc Appr            199\n","City MPG                199\n","Hwy MPG                 199\n","Cmb MPG                 199\n","Unadj Cmb MPG           199\n","Greenhouse Gas Score    199\n","SmartWay                  0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Model</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Displ</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Cyl</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Trans</th>\n","      <td>199</td>\n","    </tr>\n","    <tr>\n","      <th>Drive</th>\n","      <td>93</td>\n","    </tr>\n","    <tr>\n","      <th>Fuel</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Sales Area</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Stnd</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Underhood ID</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Veh Class</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Air Pollution Score</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>FE Calc Appr</th>\n","      <td>199</td>\n","    </tr>\n","    <tr>\n","      <th>City MPG</th>\n","      <td>199</td>\n","    </tr>\n","    <tr>\n","      <th>Hwy MPG</th>\n","      <td>199</td>\n","    </tr>\n","    <tr>\n","      <th>Cmb MPG</th>\n","      <td>199</td>\n","    </tr>\n","    <tr>\n","      <th>Unadj Cmb MPG</th>\n","      <td>199</td>\n","    </tr>\n","    <tr>\n","      <th>Greenhouse Gas Score</th>\n","      <td>199</td>\n","    </tr>\n","    <tr>\n","      <th>SmartWay</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":167}]},{"cell_type":"code","source":["all_alpha_08.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_LLRLEZgvY2o","executionInfo":{"status":"ok","timestamp":1729592781496,"user_tz":-330,"elapsed":464,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"0469b193-b23f-488d-eefa-be3ec37ccd91"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 2404 entries, 0 to 2403\n","Data columns (total 18 columns):\n"," #   Column                Non-Null Count  Dtype  \n","---  ------                --------------  -----  \n"," 0   Model                 2404 non-null   object \n"," 1   Displ                 2404 non-null   float64\n"," 2   Cyl                   2404 non-null   object \n"," 3   Trans                 2205 non-null   object \n"," 4   Drive                 2311 non-null   object \n"," 5   Fuel                  2404 non-null   object \n"," 6   Sales Area            2404 non-null   object \n"," 7   Stnd                  2404 non-null   object \n"," 8   Underhood ID          2404 non-null   object \n"," 9   Veh Class             2404 non-null   object \n"," 10  Air Pollution Score   2404 non-null   object \n"," 11  FE Calc Appr          2205 non-null   object \n"," 12  City MPG              2205 non-null   object \n"," 13  Hwy MPG               2205 non-null   object \n"," 14  Cmb MPG               2205 non-null   object \n"," 15  Unadj Cmb MPG         2205 non-null   float64\n"," 16  Greenhouse Gas Score  2205 non-null   object \n"," 17  SmartWay              2404 non-null   object \n","dtypes: float64(2), object(16)\n","memory usage: 338.2+ KB\n"]}]},{"cell_type":"code","source":["all_alpha_08.head(2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"lUsjdNM7vYyB","executionInfo":{"status":"ok","timestamp":1729592817483,"user_tz":-330,"elapsed":473,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"8e49f9ab-687d-4d99-ea80-c4375b153f56"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Model  Displ      Cyl    Trans Drive      Fuel Sales Area Stnd  \\\n","0  ACURA MDX    3.7  (6 cyl)  Auto-S5   4WD  Gasoline         CA   U2   \n","1  ACURA MDX    3.7  (6 cyl)  Auto-S5   4WD  Gasoline         FA   B5   \n","\n","   Underhood ID Veh Class Air Pollution Score FE Calc Appr City MPG Hwy MPG  \\\n","0  8HNXT03.7PKR       SUV                   7          Drv       15      20   \n","1  8HNXT03.7PKR       SUV                   6          Drv       15      20   \n","\n","  Cmb MPG  Unadj Cmb MPG Greenhouse Gas Score SmartWay  \n","0      17        22.0527                    4       no  \n","1      17        22.0527                    4       no  "],"text/html":["\n","  <div id=\"df-ef1888af-cc1e-40ed-bfef-992e12ae3675\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Displ</th>\n","      <th>Cyl</th>\n","      <th>Trans</th>\n","      <th>Drive</th>\n","      <th>Fuel</th>\n","      <th>Sales Area</th>\n","      <th>Stnd</th>\n","      <th>Underhood ID</th>\n","      <th>Veh Class</th>\n","      <th>Air Pollution Score</th>\n","      <th>FE Calc Appr</th>\n","      <th>City MPG</th>\n","      <th>Hwy MPG</th>\n","      <th>Cmb MPG</th>\n","      <th>Unadj Cmb MPG</th>\n","      <th>Greenhouse Gas Score</th>\n","      <th>SmartWay</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ACURA MDX</td>\n","      <td>3.7</td>\n","      <td>(6 cyl)</td>\n","      <td>Auto-S5</td>\n","      <td>4WD</td>\n","      <td>Gasoline</td>\n","      <td>CA</td>\n","      <td>U2</td>\n","      <td>8HNXT03.7PKR</td>\n","      <td>SUV</td>\n","      <td>7</td>\n","      <td>Drv</td>\n","      <td>15</td>\n","      <td>20</td>\n","      <td>17</td>\n","      <td>22.0527</td>\n","      <td>4</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ACURA MDX</td>\n","      <td>3.7</td>\n","      <td>(6 cyl)</td>\n","      <td>Auto-S5</td>\n","      <td>4WD</td>\n","      <td>Gasoline</td>\n","      <td>FA</td>\n","      <td>B5</td>\n","      <td>8HNXT03.7PKR</td>\n","      <td>SUV</td>\n","      <td>6</td>\n","      <td>Drv</td>\n","      <td>15</td>\n","      <td>20</td>\n","      <td>17</td>\n","      <td>22.0527</td>\n","      <td>4</td>\n","      <td>no</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ef1888af-cc1e-40ed-bfef-992e12ae3675')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ef1888af-cc1e-40ed-bfef-992e12ae3675 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ef1888af-cc1e-40ed-bfef-992e12ae3675');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-934eb867-50ea-47d2-aedb-9760a9e929dd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-934eb867-50ea-47d2-aedb-9760a9e929dd')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-934eb867-50ea-47d2-aedb-9760a9e929dd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"all_alpha_08","summary":"{\n  \"name\": \"all_alpha_08\",\n  \"rows\": 2404,\n  \"fields\": [\n    {\n      \"column\": \"Model\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 436,\n        \"samples\": [\n          \"TOYOTA Avalon\",\n          \"CHEVROLET Aveo\",\n          \"MERCEDES-BENZ E350\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Displ\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3357853838729523,\n        \"min\": 1.3,\n        \"max\": 8.4,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          7.0,\n          1.3,\n          2.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cyl\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"(4 cyl)\",\n          \"(16 cyl)\",\n          \"(6 cyl)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Trans\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Auto-L5\",\n          \"S8\",\n          \"Auto-S5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Drive\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"2WD\",\n          \"4WD\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fuel\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"ethanol/gas\",\n          \"CNG\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sales Area\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"CA\",\n          \"FA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stnd\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"B2\",\n          \"B3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Underhood ID\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 343,\n        \"samples\": [\n          \"8TKXV03.05FA\",\n          \"8FMXT06.85HR\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Veh Class\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"van\",\n          \"midsize car\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Air Pollution Score\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"9\",\n          \"0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FE Calc Appr\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"5cy\",\n          \"Drv\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City MPG\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 39,\n        \"samples\": [\n          \"40\",\n          \"35\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hwy MPG\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 43,\n        \"samples\": [\n          \"45\",\n          \"21/29\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cmb MPG\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 38,\n        \"samples\": [\n          \"42\",\n          \"34\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unadj Cmb MPG\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.366169872119715,\n        \"min\": 10.0184,\n        \"max\": 65.7778,\n        \"num_unique_values\": 721,\n        \"samples\": [\n          21.5407,\n          30.0621\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Greenhouse Gas Score\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"4\",\n          \"9\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SmartWay\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"yes\",\n          \"no\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":170}]},{"cell_type":"code","source":["all_alpha_08[all_alpha_08['Trans'].isna()]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"nAjX0DK4xAcl","executionInfo":{"status":"ok","timestamp":1729592924465,"user_tz":-330,"elapsed":651,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"cc48d492-fa7c-43a2-f931-f388f0b2ea88"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                       Model  Displ      Cyl Trans Drive      Fuel Sales Area  \\\n","389   CHEVROLET Express 3500    6.0  (4 cyl)   NaN   NaN  Gasoline         FC   \n","390   CHEVROLET Express 3500    6.2  (4 cyl)   NaN   NaN  Gasoline         FC   \n","391   CHEVROLET Express 3500    4.8  (4 cyl)   NaN   NaN  Gasoline         FA   \n","392   CHEVROLET Express 3500    4.8  (4 cyl)   NaN   NaN  Gasoline         FA   \n","393   CHEVROLET Express 3500    4.8  (4 cyl)   NaN   NaN  Gasoline         CA   \n","...                      ...    ...      ...   ...   ...       ...        ...   \n","1465       LINCOLN Navigator    5.4  (4 cyl)   NaN   4WD  Gasoline         FA   \n","1934     PORSCHE Cayenne GTS    4.8  (8 cyl)   NaN   4WD  Gasoline         CA   \n","1935     PORSCHE Cayenne GTS    4.8  (8 cyl)   NaN   4WD  Gasoline         FA   \n","1939   PORSCHE Cayenne Turbo    4.8  (8 cyl)   NaN   4WD  Gasoline         FA   \n","1941   PORSCHE Cayenne Turbo    4.8  (6 cyl)   NaN   4WD  Gasoline         CA   \n","\n","     Stnd  Underhood ID Veh Class Air Pollution Score FE Calc Appr City MPG  \\\n","389    B8  8GMXT06.2394       van                   3          NaN      NaN   \n","390    B8  8GMXT06.2394       van                   3          NaN      NaN   \n","391   HDV  8GMXK06.0389       van                   2          NaN      NaN   \n","392   HDV  8GMXK06.0396       van                   2          NaN      NaN   \n","393    L2  8GMXK06.0389       van                   2          NaN      NaN   \n","...   ...           ...       ...                 ...          ...      ...   \n","1465   B5  8FMXT05.44E6       SUV                   6          NaN      NaN   \n","1934   U2  8PRXT04.8SED       SUV                   7          NaN      NaN   \n","1935   B5  8PRXT04.8SED       SUV                   6          NaN      NaN   \n","1939   B5  8PRXT04.8TED       SUV                   6          NaN      NaN   \n","1941   L2  8PRXT04.8TED       SUV                   6          NaN      NaN   \n","\n","     Hwy MPG Cmb MPG  Unadj Cmb MPG Greenhouse Gas Score SmartWay  \n","389      NaN     NaN            NaN                  NaN       no  \n","390      NaN     NaN            NaN                  NaN       no  \n","391      NaN     NaN            NaN                  NaN       no  \n","392      NaN     NaN            NaN                  NaN       no  \n","393      NaN     NaN            NaN                  NaN       no  \n","...      ...     ...            ...                  ...      ...  \n","1465     NaN     NaN            NaN                  NaN       no  \n","1934     NaN     NaN            NaN                  NaN       no  \n","1935     NaN     NaN            NaN                  NaN       no  \n","1939     NaN     NaN            NaN                  NaN       no  \n","1941     NaN     NaN            NaN                  NaN       no  \n","\n","[199 rows x 18 columns]"],"text/html":["\n","  <div id=\"df-b77df843-9c0a-43c6-ba25-408410c56de2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Displ</th>\n","      <th>Cyl</th>\n","      <th>Trans</th>\n","      <th>Drive</th>\n","      <th>Fuel</th>\n","      <th>Sales Area</th>\n","      <th>Stnd</th>\n","      <th>Underhood ID</th>\n","      <th>Veh Class</th>\n","      <th>Air Pollution Score</th>\n","      <th>FE Calc Appr</th>\n","      <th>City MPG</th>\n","      <th>Hwy MPG</th>\n","      <th>Cmb MPG</th>\n","      <th>Unadj Cmb MPG</th>\n","      <th>Greenhouse Gas Score</th>\n","      <th>SmartWay</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>389</th>\n","      <td>CHEVROLET Express 3500</td>\n","      <td>6.0</td>\n","      <td>(4 cyl)</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Gasoline</td>\n","      <td>FC</td>\n","      <td>B8</td>\n","      <td>8GMXT06.2394</td>\n","      <td>van</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>390</th>\n","      <td>CHEVROLET Express 3500</td>\n","      <td>6.2</td>\n","      <td>(4 cyl)</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Gasoline</td>\n","      <td>FC</td>\n","      <td>B8</td>\n","      <td>8GMXT06.2394</td>\n","      <td>van</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>391</th>\n","      <td>CHEVROLET Express 3500</td>\n","      <td>4.8</td>\n","      <td>(4 cyl)</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Gasoline</td>\n","      <td>FA</td>\n","      <td>HDV</td>\n","      <td>8GMXK06.0389</td>\n","      <td>van</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>392</th>\n","      <td>CHEVROLET Express 3500</td>\n","      <td>4.8</td>\n","      <td>(4 cyl)</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Gasoline</td>\n","      <td>FA</td>\n","      <td>HDV</td>\n","      <td>8GMXK06.0396</td>\n","      <td>van</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>393</th>\n","      <td>CHEVROLET Express 3500</td>\n","      <td>4.8</td>\n","      <td>(4 cyl)</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Gasoline</td>\n","      <td>CA</td>\n","      <td>L2</td>\n","      <td>8GMXK06.0389</td>\n","      <td>van</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1465</th>\n","      <td>LINCOLN Navigator</td>\n","      <td>5.4</td>\n","      <td>(4 cyl)</td>\n","      <td>NaN</td>\n","      <td>4WD</td>\n","      <td>Gasoline</td>\n","      <td>FA</td>\n","      <td>B5</td>\n","      <td>8FMXT05.44E6</td>\n","      <td>SUV</td>\n","      <td>6</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>1934</th>\n","      <td>PORSCHE Cayenne GTS</td>\n","      <td>4.8</td>\n","      <td>(8 cyl)</td>\n","      <td>NaN</td>\n","      <td>4WD</td>\n","      <td>Gasoline</td>\n","      <td>CA</td>\n","      <td>U2</td>\n","      <td>8PRXT04.8SED</td>\n","      <td>SUV</td>\n","      <td>7</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>1935</th>\n","      <td>PORSCHE Cayenne GTS</td>\n","      <td>4.8</td>\n","      <td>(8 cyl)</td>\n","      <td>NaN</td>\n","      <td>4WD</td>\n","      <td>Gasoline</td>\n","      <td>FA</td>\n","      <td>B5</td>\n","      <td>8PRXT04.8SED</td>\n","      <td>SUV</td>\n","      <td>6</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>1939</th>\n","      <td>PORSCHE Cayenne Turbo</td>\n","      <td>4.8</td>\n","      <td>(8 cyl)</td>\n","      <td>NaN</td>\n","      <td>4WD</td>\n","      <td>Gasoline</td>\n","      <td>FA</td>\n","      <td>B5</td>\n","      <td>8PRXT04.8TED</td>\n","      <td>SUV</td>\n","      <td>6</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>1941</th>\n","      <td>PORSCHE Cayenne Turbo</td>\n","      <td>4.8</td>\n","      <td>(6 cyl)</td>\n","      <td>NaN</td>\n","      <td>4WD</td>\n","      <td>Gasoline</td>\n","      <td>CA</td>\n","      <td>L2</td>\n","      <td>8PRXT04.8TED</td>\n","      <td>SUV</td>\n","      <td>6</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>no</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>199 rows × 18 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b77df843-9c0a-43c6-ba25-408410c56de2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b77df843-9c0a-43c6-ba25-408410c56de2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b77df843-9c0a-43c6-ba25-408410c56de2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-29d1283a-3c6a-4727-8704-911404e1dde2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-29d1283a-3c6a-4727-8704-911404e1dde2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-29d1283a-3c6a-4727-8704-911404e1dde2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"0"}},"metadata":{},"execution_count":172}]},{"cell_type":"code","source":["all_alpha_08[all_alpha_08['Trans'].isna()]['Model'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AYBfNKocxAVV","executionInfo":{"status":"ok","timestamp":1729593121617,"user_tz":-330,"elapsed":430,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"a67b5016-cfa1-48f5-fc34-af862b820f2e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['CHEVROLET Express 3500', 'CHEVROLET Silverado 25',\n","       'CHEVROLET Silverado 35', 'CHEVROLET Suburban 2500',\n","       'CHEVROLET Van 3500', 'DODGE 3500', 'DODGE RAM 1500',\n","       'DODGE RAM 2500', 'DODGE RAM 3500', 'DODGE Sprinter 2500',\n","       'FORD E150', 'FORD E150 Club Wagon FFV', 'FORD E150 FFV',\n","       'FORD E250', 'FORD E250 FFV', 'FORD E350', 'FORD Expedition',\n","       'FORD F250', 'FORD F350', 'FREIGHTLINER 2500', 'FREIGHTLINER 3500',\n","       'GMC Savana 3500', 'GMC Sierra 25', 'GMC Sierra 35',\n","       'GMC Yukon 2500', 'HUMMER H2', 'LINCOLN Navigator',\n","       'PORSCHE Cayenne GTS', 'PORSCHE Cayenne Turbo'], dtype=object)"]},"metadata":{},"execution_count":176}]},{"cell_type":"code","source":["chevrolet_rows = all_alpha_08[all_alpha_08['Model'].str.contains('CHEVROLET', case=False)]\n","print(chevrolet_rows.shape)\n","print(chevrolet_rows)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dN4TAAET4NlT","executionInfo":{"status":"ok","timestamp":1729595758796,"user_tz":-330,"elapsed":451,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"9aaef662-f9ca-4897-8c91-803d934b2cb3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(228, 18)\n","                        Model  Displ      Cyl    Trans Drive         Fuel  \\\n","316  CHEVROLET Avalanche 1500    5.3  (8 cyl)  Auto-L4   2WD  ethanol/gas   \n","317  CHEVROLET Avalanche 1500    5.3  (8 cyl)  Auto-L4   4WD  ethanol/gas   \n","318  CHEVROLET Avalanche 1500    5.3  (8 cyl)  Auto-L4   2WD     Gasoline   \n","319  CHEVROLET Avalanche 1500    6.0  (8 cyl)  Auto-L4   2WD     Gasoline   \n","320  CHEVROLET Avalanche 1500    6.0  (8 cyl)  Auto-L4   4WD     Gasoline   \n","..                        ...    ...      ...      ...   ...          ...   \n","539        CHEVROLET Van 3500    4.8  (6 cyl)      NaN   NaN     Gasoline   \n","540        CHEVROLET Van 3500    6.0  (6 cyl)      NaN   NaN     Gasoline   \n","541        CHEVROLET Van 3500    6.0  (6 cyl)      NaN   NaN     Gasoline   \n","542        CHEVROLET Van 3500    6.0  (6 cyl)      NaN   NaN     Gasoline   \n","543        CHEVROLET Van 3500    6.0  (6 cyl)      NaN   NaN     Gasoline   \n","\n","    Sales Area Stnd  Underhood ID Veh Class Air Pollution Score FE Calc Appr  \\\n","316         FC   B4  8GMXT05.3381       SUV                 7/7          Drv   \n","317         FC   B4  8GMXT05.3381       SUV                 7/7          Drv   \n","318         FC   B4  8GMXT05.3380       SUV                   7          Drv   \n","319         FC   B4  8GMXT06.0383       SUV                   7          Drv   \n","320         FC   B4  8GMXT06.0383       SUV                   7          Drv   \n","..         ...  ...           ...       ...                 ...          ...   \n","539         CA   L2  8GMXK06.0396       van                   2          NaN   \n","540         FA  HDV  8GMXK06.0389       van                   2          NaN   \n","541         FA  HDV  8GMXK06.0396       van                   2          NaN   \n","542         CA   L2  8GMXK06.0389       van                   2          NaN   \n","543         CA   L2  8GMXK06.0396       van                   2          NaN   \n","\n","    City MPG Hwy MPG Cmb MPG  Unadj Cmb MPG Greenhouse Gas Score SmartWay  \n","316    11/14   15/20   12/16        12.2796                  6/4       no  \n","317    11/14   14/19   12/16        12.0394                  6/4       no  \n","318       14      20      16        16.4338                    4       no  \n","319       12      17      14        14.3035                    2       no  \n","320       12      17      14        14.0240                    2       no  \n","..       ...     ...     ...            ...                  ...      ...  \n","539      NaN     NaN     NaN            NaN                  NaN       no  \n","540      NaN     NaN     NaN            NaN                  NaN       no  \n","541      NaN     NaN     NaN            NaN                  NaN       no  \n","542      NaN     NaN     NaN            NaN                  NaN       no  \n","543      NaN     NaN     NaN            NaN                  NaN       no  \n","\n","[228 rows x 18 columns]\n"]}]},{"cell_type":"code","source":["chevrolet_rows = all_alpha_08[all_alpha_08['Model'].str.contains('CHEVROLET', case=False)]\n","trans_counts = chevrolet_rows.groupby(['Veh Class'])['Trans'].nunique()\n","print(trans_counts)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-j27Spkk-0bE","executionInfo":{"status":"ok","timestamp":1729599943169,"user_tz":-330,"elapsed":446,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"47f30c02-4d2a-4030-d07e-7ec8651f9037"},"execution_count":252,"outputs":[{"output_type":"stream","name":"stdout","text":["Veh Class\n","SUV            6\n","large car      1\n","midsize car    2\n","minivan        1\n","pickup         2\n","small car      5\n","van            1\n","Name: Trans, dtype: int64\n"]}]},{"cell_type":"code","source":["for i in range(len(all_alpha_08)):\n","    all_alpha_08[all_alpha_08['Model'].str.contains('CHEVROLET', case=False)]['Trans'].fillna()"],"metadata":{"id":"GBQebdb88OF6","executionInfo":{"status":"ok","timestamp":1729599969625,"user_tz":-330,"elapsed":437,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}}},"execution_count":252,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"rAjZZFl3xAPv","executionInfo":{"status":"ok","timestamp":1729599965920,"user_tz":-330,"elapsed":423,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}}},"execution_count":252,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"fomeimHBzrIb","executionInfo":{"status":"ok","timestamp":1729599975474,"user_tz":-330,"elapsed":429,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}}},"execution_count":252,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"LMoxQF1f2tLm","executionInfo":{"status":"ok","timestamp":1729599980725,"user_tz":-330,"elapsed":463,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}}},"execution_count":252,"outputs":[]},{"cell_type":"code","source":["all_alpha_08[(all_alpha_08['Model'] == 'CHEVROLET Silverado 25') & (all_alpha_08['Trans'].isna())]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":426},"id":"AUryaek5xAMm","executionInfo":{"status":"ok","timestamp":1729593477400,"user_tz":-330,"elapsed":682,"user":{"displayName":"PGDAI ACTS","userId":"16113966839122920361"}},"outputId":"781e4601-00d6-4f07-ea54-3b700790f4b4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                      Model  Displ      Cyl Trans Drive      Fuel Sales Area  \\\n","449  CHEVROLET Silverado 25    4.8  (8 cyl)   NaN   2WD  Gasoline         FA   \n","450  CHEVROLET Silverado 25    4.8  (8 cyl)   NaN   2WD  Gasoline         FA   \n","451  CHEVROLET Silverado 25    4.8  (8 cyl)   NaN   4WD  Gasoline         FA   \n","452  CHEVROLET Silverado 25    4.8  (8 cyl)   NaN   4WD  Gasoline         FA   \n","453  CHEVROLET Silverado 25    4.8  (8 cyl)   NaN   2WD  Gasoline         CA   \n","454  CHEVROLET Silverado 25    4.8  (8 cyl)   NaN   4WD  Gasoline         CA   \n","455  CHEVROLET Silverado 25    6.0  (8 cyl)   NaN   2WD  Gasoline         FA   \n","456  CHEVROLET Silverado 25    6.0  (8 cyl)   NaN   2WD  Gasoline         FA   \n","457  CHEVROLET Silverado 25    6.0  (8 cyl)   NaN   4WD  Gasoline         FA   \n","458  CHEVROLET Silverado 25    6.0  (8 cyl)   NaN   4WD  Gasoline         FA   \n","459  CHEVROLET Silverado 25    6.0  (8 cyl)   NaN   2WD  Gasoline         CA   \n","460  CHEVROLET Silverado 25    6.0  (8 cyl)   NaN   4WD  Gasoline         CA   \n","\n","    Stnd  Underhood ID Veh Class Air Pollution Score FE Calc Appr City MPG  \\\n","449  HDV  8GMXK06.0389    pickup                   2          NaN      NaN   \n","450  HDV  8GMXK06.0396    pickup                   2          NaN      NaN   \n","451  HDV  8GMXK06.0389    pickup                   2          NaN      NaN   \n","452  HDV  8GMXK06.0396    pickup                   2          NaN      NaN   \n","453   L2  8GMXK06.0389    pickup                   2          NaN      NaN   \n","454   L2  8GMXK06.0389    pickup                   2          NaN      NaN   \n","455  HDV  8GMXK06.0389    pickup                   2          NaN      NaN   \n","456  HDV  8GMXK06.0396    pickup                   2          NaN      NaN   \n","457  HDV  8GMXK06.0389    pickup                   2          NaN      NaN   \n","458  HDV  8GMXK06.0396    pickup                   2          NaN      NaN   \n","459   L2  8GMXK06.0389    pickup                   2          NaN      NaN   \n","460   L2  8GMXK06.0389    pickup                   2          NaN      NaN   \n","\n","    Hwy MPG Cmb MPG  Unadj Cmb MPG Greenhouse Gas Score SmartWay  \n","449     NaN     NaN            NaN                  NaN       no  \n","450     NaN     NaN            NaN                  NaN       no  \n","451     NaN     NaN            NaN                  NaN       no  \n","452     NaN     NaN            NaN                  NaN       no  \n","453     NaN     NaN            NaN                  NaN       no  \n","454     NaN     NaN            NaN                  NaN       no  \n","455     NaN     NaN            NaN                  NaN       no  \n","456     NaN     NaN            NaN                  NaN       no  \n","457     NaN     NaN            NaN                  NaN       no  \n","458     NaN     NaN            NaN                  NaN       no  \n","459     NaN     NaN            NaN                  NaN       no  \n","460     NaN     NaN            NaN                  NaN       no  "],"text/html":["\n","  <div id=\"df-9dbd0175-1aed-40fa-bdcb-931f4082021a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Displ</th>\n","      <th>Cyl</th>\n","      <th>Trans</th>\n","      <th>Drive</th>\n","      <th>Fuel</th>\n","      <th>Sales Area</th>\n","      <th>Stnd</th>\n","      <th>Underhood ID</th>\n","      <th>Veh Class</th>\n","      <th>Air Pollution Score</th>\n","      <th>FE Calc Appr</th>\n","      <th>City MPG</th>\n","      <th>Hwy MPG</th>\n","      <th>Cmb MPG</th>\n","      <th>Unadj Cmb MPG</th>\n","      <th>Greenhouse Gas Score</th>\n","      <th>SmartWay</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>449</th>\n","      <td>CHEVROLET Silverado 25</td>\n","      <td>4.8</td>\n","      <td>(8 cyl)</td>\n","      <td>NaN</td>\n","      <td>2WD</td>\n","      <td>Gasoline</td>\n","      <td>FA</td>\n","      <td>HDV</td>\n","      <td>8GMXK06.0389</td>\n","      <td>pickup</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>450</th>\n","      <td>CHEVROLET Silverado 25</td>\n","      <td>4.8</td>\n","      <td>(8 cyl)</td>\n","      <td>NaN</td>\n","      <td>2WD</td>\n","      <td>Gasoline</td>\n","      <td>FA</td>\n","      <td>HDV</td>\n","      <td>8GMXK06.0396</td>\n","      <td>pickup</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>451</th>\n","      <td>CHEVROLET Silverado 25</td>\n","      <td>4.8</td>\n","      <td>(8 cyl)</td>\n","      <td>NaN</td>\n","      <td>4WD</td>\n","      <td>Gasoline</td>\n","      <td>FA</td>\n","      <td>HDV</td>\n","      <td>8GMXK06.0389</td>\n","      <td>pickup</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>452</th>\n","      <td>CHEVROLET Silverado 25</td>\n","      <td>4.8</td>\n","      <td>(8 cyl)</td>\n","      <td>NaN</td>\n","      <td>4WD</td>\n","      <td>Gasoline</td>\n","      <td>FA</td>\n","      <td>HDV</td>\n","      <td>8GMXK06.0396</td>\n","      <td>pickup</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>453</th>\n","      <td>CHEVROLET Silverado 25</td>\n","      <td>4.8</td>\n","      <td>(8 cyl)</td>\n","      <td>NaN</td>\n","      <td>2WD</td>\n","      <td>Gasoline</td>\n","      <td>CA</td>\n","      <td>L2</td>\n","      <td>8GMXK06.0389</td>\n","      <td>pickup</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>454</th>\n","      <td>CHEVROLET Silverado 25</td>\n","      <td>4.8</td>\n","      <td>(8 cyl)</td>\n","      <td>NaN</td>\n","      <td>4WD</td>\n","      <td>Gasoline</td>\n","      <td>CA</td>\n","      <td>L2</td>\n","      <td>8GMXK06.0389</td>\n","      <td>pickup</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>455</th>\n","      <td>CHEVROLET Silverado 25</td>\n","      <td>6.0</td>\n","      <td>(8 cyl)</td>\n","      <td>NaN</td>\n","      <td>2WD</td>\n","      <td>Gasoline</td>\n","      <td>FA</td>\n","      <td>HDV</td>\n","      <td>8GMXK06.0389</td>\n","      <td>pickup</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>456</th>\n","      <td>CHEVROLET Silverado 25</td>\n","      <td>6.0</td>\n","      <td>(8 cyl)</td>\n","      <td>NaN</td>\n","      <td>2WD</td>\n","      <td>Gasoline</td>\n","      <td>FA</td>\n","      <td>HDV</td>\n","      <td>8GMXK06.0396</td>\n","      <td>pickup</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>457</th>\n","      <td>CHEVROLET Silverado 25</td>\n","      <td>6.0</td>\n","      <td>(8 cyl)</td>\n","      <td>NaN</td>\n","      <td>4WD</td>\n","      <td>Gasoline</td>\n","      <td>FA</td>\n","      <td>HDV</td>\n","      <td>8GMXK06.0389</td>\n","      <td>pickup</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>458</th>\n","      <td>CHEVROLET Silverado 25</td>\n","      <td>6.0</td>\n","      <td>(8 cyl)</td>\n","      <td>NaN</td>\n","      <td>4WD</td>\n","      <td>Gasoline</td>\n","      <td>FA</td>\n","      <td>HDV</td>\n","      <td>8GMXK06.0396</td>\n","      <td>pickup</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>459</th>\n","      <td>CHEVROLET Silverado 25</td>\n","      <td>6.0</td>\n","      <td>(8 cyl)</td>\n","      <td>NaN</td>\n","      <td>2WD</td>\n","      <td>Gasoline</td>\n","      <td>CA</td>\n","      <td>L2</td>\n","      <td>8GMXK06.0389</td>\n","      <td>pickup</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>no</td>\n","    </tr>\n","    <tr>\n","      <th>460</th>\n","      <td>CHEVROLET Silverado 25</td>\n","      <td>6.0</td>\n","      <td>(8 cyl)</td>\n","      <td>NaN</td>\n","      <td>4WD</td>\n","      <td>Gasoline</td>\n","      <td>CA</td>\n","      <td>L2</td>\n","      <td>8GMXK06.0389</td>\n","      <td>pickup</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>no</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9dbd0175-1aed-40fa-bdcb-931f4082021a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9dbd0175-1aed-40fa-bdcb-931f4082021a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9dbd0175-1aed-40fa-bdcb-931f4082021a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-114e7186-c597-4270-832a-e1d2be4e53da\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-114e7186-c597-4270-832a-e1d2be4e53da')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-114e7186-c597-4270-832a-e1d2be4e53da button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"0"}},"metadata":{},"execution_count":189}]},{"cell_type":"markdown","source":["*** Questions:***  (clean_alpha_xx)\n","\n","Q1: Find out the alternative sources of fuel available in 2008 & 2018 respectively and by how much?  \n","Q2: Is there any improvement in 'fuel economy' with respect to vehicle class from 2008 to 2018? Perform the necessary steps to examine.  \n","Q3: Is there any change in characteristics of SmartWay Vehicles?  \n","Q4: Which features are associated with better fuel economy?  \n","Q5: How much improvement is there in miles/gallon or mpg? Also, which vehicle has improved the most?  "],"metadata":{"id":"77UL3clCuL5z"}},{"cell_type":"code","source":[],"metadata":{"id":"NvYPh0CBuDPr"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Question 4"],"metadata":{"id":"zEtBlUtD9Mak"}},{"cell_type":"markdown","source":["### Election Analysis:  \n","Indians and elections happen almost every month and every year. Loksabha elections, however, take place every 5 years. We have data on candidates and electors from 2009 and 2014. Compare the datasets and compute the results visually:  \n","\n","1. **Create grand alliances**  \n","   - UPA: 'INC', 'NCP', 'RJD', 'DMK', 'IUML', 'JMM', 'JD(s)', 'KC(M)', 'RLD', 'RSP', 'CMP(J)', 'KC(J)', 'PPI', 'MD'  \n","   - NDA: 'BJP', 'SS', 'LJP', 'SAD', 'RLSP', 'AD', 'PMK', 'NPP', 'AINRC', 'NPF', 'RPI(A)', 'BPF', 'JD(U)', 'SDF', 'NDPP', 'MNF', 'RIDALOS', 'KMDK', 'IJK', 'PNK', 'JSP', 'GJM', 'MGP', 'GFP', 'GVP', 'AJSU', 'IPFT', 'MPP', 'KPP', 'JKPC', 'KC(T)', 'BDJS', 'AGP', 'JSS', 'PPA', 'UDP', 'HSPDP', 'PSP', 'JRS', 'KVC', 'PNP', 'SBSP', 'KC(N)', 'PDF', 'MDPF'  \n","   - Others: 'YSRCP', 'AAAP', 'IND', 'AIUDF', 'BLSP', 'JKPDP', 'JD(S)', 'INLD', 'CPI', 'AIMIM', 'KEC(M)', 'SWP', 'NPEP', 'JKN', 'AIFB', 'MUL', 'AUDF', 'BOPF', 'BVA', 'HJCBL', 'JVM', 'MDMK'  \n","\n","2. **Create winning seats distribution** by Major Political Parties & Alliances for 2009 & 2014  \n","\n","3. **How many seats were won** by Alliances and Major Political Parties?  \n","\n","4. **Plot comparatively seats won** based on candidate category as General, ST, and SC for 2009 & 2014  \n","\n","5. **Plot the age distribution** of winners for both 2014 and 2009 elections  \n","\n","6. **Separately plot age distribution** of NDA & UPA candidates  \n","\n","7. **Plot gender distributions** of 2009 & 2014 elections  \n","\n","8. **Plot gender distribution** of NDA and UPA separately for 2009 elections  \n","\n","9. **Plot gender distribution** of NDA and UPA separately for 2014 elections  \n","\n","10. **Plot the poll percentage** of states for 2009 & 2014 elections  "],"metadata":{"id":"l5hspXe58zes"}}]}